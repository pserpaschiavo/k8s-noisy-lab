apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  replicas: 1  # Single-node, 1 réplica é suficiente
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
      annotations:
        prometheus.io/scrape: "true"  # Habilita coleta de métricas
        prometheus.io/port: "10254"   # Porta das métricas
    spec:
      containers:
        - name: controller
          image: registry.k8s.io/ingress-nginx/controller:v1.10.1
          args:
            - /nginx-ingress-controller
            - --election-id=ingress-nginx-leader
            - --controller-class=k8s.io/ingress-nginx
            - --configmap=$(POD_NAMESPACE)/ingress-nginx-controller
            - --ingress-class=nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-controller
            - --enable-metrics=true
          resources:
            limits:
              cpu: "2"      # Limite de CPU (ajuste conforme necessário)
              memory: "1Gi" # Limite de memória
            requests:
              cpu: "0.5"    # Request mínimo de CPU
              memory: "512Mi"
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: metrics
              containerPort: 10254
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
spec:
  type: NodePort  # Use LoadBalancer se tiver um cloud provider
  ports:
    - name: http
      port: 80
      targetPort: 80
      nodePort: 30080  # Porta customizada (opcional)
    - name: https
      port: 443
      targetPort: 443
      nodePort: 30443
    - name: metrics
      port: 10254
      targetPort: 10254
  selector:
    app.kubernetes.io/name: ingress-nginx
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-nginx-controller
  namespace: ingress-nginx
data:
  # Otimizações para recursos limitados
  worker-processes: "2"           # Número de workers (CPU-bound)
  keep-alive-requests: "100"      # Conexões persistentes
  upstream-keepalive-connections: "50"  # Reutiliza conexões upstream
  # Habilita métricas do Prometheus
  enable-prometheus-metrics: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ingress-nginx
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx