apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: tenant-c
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  namespace: tenant-c
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:6.2
        ports:
        - containerPort: 6379
        command: ["redis-server"]
        args:
        - "--maxmemory"
        - "900mb"
        - "--maxmemory-policy"
        - "allkeys-lru"
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 400m
            memory: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-benchmark
  namespace: tenant-c
spec:
  template:
    spec:
      containers:
      - name: redis-benchmark
        image: redis:6.2
        command: ["redis-benchmark"]
        args:
        - "-h"
        - "redis.tenant-c.svc.cluster.local"
        - "-p"
        - "6379"
        - "-c"
        - "50"
        - "-n"
        - "100000"
        - "-d"
        - "8192"  # usar payloads maiores para aumentar uso de memória
        - "-t"
        - "set,lpush,sadd,zadd"  # foco em operações que consomem memória
        - "--csv"
      restartPolicy: Never
  backoffLimit: 4
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: continuous-memory-stress
  namespace: tenant-c
spec:
  schedule: "*/2 * * * *"  # A cada 2 minutos
  concurrencyPolicy: Allow
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: memory-stress
            image: redis:6.2
            command: ["/bin/sh", "-c"]
            args:
            - |
              # Executar benchmark contínuo durante o experimento
              for i in $(seq 1 60); do
                redis-benchmark -h redis.tenant-c.svc.cluster.local -p 6379 \
                  -c 30 -n 50000 -d 4096 -t set,lpush -q || true
                sleep 5
              done
            resources:
              requests:
                cpu: 100m
                memory: 128Mi
              limits:
                cpu: 200m
                memory: 256Mi
          restartPolicy: Never
      backoffLimit: 0